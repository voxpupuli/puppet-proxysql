# Class: proxysql
# ===========================
#
# Full description of class proxysql here.
#
# Parameters
# ----------
#
# * `use_vault`
#   Determines If we will autogenerate passwords for all users and store them in Vault. Boolean, defaults to 'true'
#
# * `load_to_runtime`
#   Specifies whether managed ProxySQL resources should be immediately loaded to the active runtime. Boolean, defaults to 'true'.
#
# * `save_to_disk`
#   Specifies whether managed ProxySQL resources should be immediately save to disk. Boolean, defaults to 'true'.
#
# * `manage_mycnf_file`
#   Determines wheter this module will configure the my.cnf file to connect to the admin interface.
#   This is required for the providers to work. Defaults to 'true'
#
# * `cluster_name`
#   The name of the ProxySQL cluster if we are using clusted setup. Defaults to ''.
#
# * `package_name`
#   The name of the ProxySQL package in your package manager. Defaults to 'proxysql'
#
# * `package_ensure`
#   The ensure of the ProxySQL package resource. Defaults to 'installed'
#
# * `sys_owner`
#   owner of the datadir and config_file, defaults to root on most systems, to proxysql on redhat-based
#
# * `sys_group`
#   group of the datadir and config_file, defaults to root on most systems, to proxysql on redhat-based
#
# * `service_name`
#   The name of the ProxySQL service resource. Defaults to 'proxysql'
#
# * `service_ensure`
#   The ensure of the ProxySQL service resource. Defaults to 'running'
#
# * `datadir`
#   The directory where ProxySQL will store it's data. defaults to '/var/lib/proxysql'
#
# * `admin_users`
#   Array of Linux users, for which .my.cnf will be saved in order to allow to connect and
#   manage ProxySQL. Defaults to [ 'dboperator' ]
#
# * `admin_listen_ip`
#   The ip where the ProxySQL admin interface will listen on. Defaults to '0.0.0.0'
#
# * `admin_listen_port`
#   The port where the ProxySQL admin interface  will listen on. Defaults to '6032'
#
# * `admin_listen_socket`
#   The socket where the ProxySQL admin interface  will listen on. Changing this on a running system will result in failing runs.
#   Defaults to '/tmp/proxysql_admin.sock'
#
# * `admin_username`
#   The username to connect to the ProxySQL admin interface. Defaults to 'admin'
#
# * `admin_password`
#   The password to connect to the ProxySQL admin interface. If $use_vault = false -  defaults to 'admin', 
#   if $use_vault = true -  is autogenerated and saved to Vault
#
# * `cluster_username`
#   The username used by ProxySQL instances in cluster to communicate with each other. Defaults to 'cluster'
#
# * `web_enabled`
#   Specifies whether web inteface with metrics is enabled. Boolean, defaults to 'true'
#
# * `web_port`
#   The port where the ProxySQL service web interface listen on. Defaults to '6080'
#
# * `listen_ip`
#   The ip where the ProxySQL service will listen on. Defaults to '127.0.0.1' aka localhost
#
# * `listen_port`
#   The port where the ProxySQL service will listen on. Defaults to '3306'
#
# * `listen_socket`
#   The socket where the ProxySQL service will listen on. Defaults to '/tmp/proxysql.sock'
#
# * `monitor_username`
#   The username ProxySQL will use to connect to the configured mysql_servers. Defaults to 'monitor'
#
# * `monitor_password`
#   The password ProxySQL will use to connect to the configured mysql_servers. If $use_vault = false -  defaults to 'monitor', 
#   if $use_vault = true -  is autogenerated and saved to Vault
#
# * `monitor_writer_is_also_reader`
#   See https://github.com/sysown/proxysql/wiki/Monitor-Module. Defaults to 'false'
#
# * `monitor_writer_is_also_reader`
#   See https://github.com/sysown/proxysql/wiki/Monitor-Module. Defaults to 'false'
#
# * `free_connections_pct`
#   See https://github.com/sysown/proxysql/wiki/Global-variables. Defaults to '20'
#
# * `free_connections_pct`
#   See https://github.com/sysown/proxysql/wiki/Global-variables. Defaults to '67108864'
#
# * `threads`
#   See https://github.com/sysown/proxysql/wiki/Global-variables. Defaults to '4'
#
# * `connect_timeout_server_max`
#   See https://github.com/sysown/proxysql/wiki/Global-variables. Defaults to '10000'
#
# * `connect_retries_on_failure`
#   See https://github.com/sysown/proxysql/wiki/Global-variables. Defaults to '10'
#
# * `override_config_settings`
#   Which configuration variables should be overriden. Hash, defaults to {} (empty hash).
#
class proxysql (
  Boolean $use_vault = $::proxysql::params::use_vault,
  Boolean $load_to_runtime = $::proxysql::params::load_to_runtime,
  Boolean $save_to_disk = $::proxysql::params::save_to_disk,
  Boolean $manage_mycnf_file = $::proxysql::params::manage_mycnf_file,
  String $cluster_name = $::proxysql::params::cluster_name,

  String $package_name = $::proxysql::params::package_name,
  String $package_ensure = $::proxysql::params::package_ensure,
  Array[String] $package_install_options = $::proxysql::params::package_install_options,
  
  String $sys_owner = $::proxysql::params::sys_owner,
  String $sys_group = $::proxysql::params::sys_group,

  String $service_name = $::proxysql::params::service_name,
  String $service_ensure = $::proxysql::params::service_ensure,

  String $datadir = $::proxysql::params::datadir,
  Array[String] $admin_users = $::proxysql::params::admin_users,

  String $admin_listen_ip = $::proxysql::params::admin_listen_ip,
  Integer $admin_listen_port = $::proxysql::params::admin_listen_port,
  String $admin_listen_socket = $::proxysql::params::admin_listen_socket,
  String $admin_username = $::proxysql::params::admin_username,
  String $admin_password = $::proxysql::params::admin_password,
  String $cluster_username = $::proxysql::params::cluster_username,
  Boolean $web_enabled = $::proxysql::params::web_enabled,
  Integer $web_port = $::proxysql::params::web_port,

  String $listen_ip = $::proxysql::params::listen_ip,
  Integer $listen_port = $::proxysql::params::listen_port,
  String $listen_socket = $::proxysql::params::listen_socket,
  String $monitor_username = $::proxysql::params::monitor_username,
  String $monitor_password = $::proxysql::params::monitor_password,
  Boolean $monitor_writer_is_also_reader = $::proxysql::params::monitor_writer_is_also_reader,
  Boolean $monitor_enabled = $::proxysql::params::monitor_enabled,
  Integer $free_connections_pct = $::proxysql::params::free_connections_pct,
  Integer $max_allowed_packet = $::proxysql::params::max_allowed_packet,
  Integer $threads = $::proxysql::params::threads,
  Integer $connect_timeout_server_max = $::proxysql::params::connect_timeout_server_max,
  Integer $connect_retries_on_failure = $::proxysql::params::connect_retries_on_failure,

  Hash $override_config_settings = {},

  Optional[Proxysql::Server] $mysql_servers = undef,
  Optional[Proxysql::User] $mysql_users = undef,
  Optional[Proxysql::Hostgroup] $mysql_hostgroups = undef,
  Optional[Proxysql::Rule] $mysql_rules = undef,
  Optional[Proxysql::Scheduler] $schedulers = undef,

  String $node_name = "${fqdn}:${admin_listen_port}"

) inherits ::proxysql::params {

  if !$use_vault {
    $_admin_password = $admin_password
    $_montor_password = $monitor_password
  } else {
      if $cluster_name {
        $_admin_password = passgen_vault("proxysql-root-{$cluster_name}",'','',['owner'])
        $_monitor_password = passgen_vault("proxysql-monitor-{$cluster_name}",'','',['owner'])
        $cluster_password = passgen_vault("proxysql-cluster-{$cluster_name}",'','',['owner'])
      } else {
        $_admin_password = passgen_vault("proxysql-root-{$node_name}",'','',['owner'])
        $_monitor_password = passgen_vault("proxysql-monitor-{$node_name}",'','',['owner'])
      }
  }
  
  # lint:ignore:80chars
  if $cluster_name {
    $settings = {
      datadir => $datadir,
      admin_variables => {
        admin_credentials => "${admin_username}:${_admin_password};${cluster_username}:${cluster_password}",
        mysql_ifaces => "${admin_listen_ip}:${admin_listen_port};${admin_listen_socket}",
        web_enabled => $web_enabled,
        web_port => $web_port,
        cluster_username => "${cluster_username}",
        cluster_password => "${cluster_password}",
      },
      mysql_variables => {
        interfaces => "${listen_ip}:${listen_port};${listen_socket}",
        monitor_writer_is_also_reader => $monitor_writer_is_also_reader,
        monitor_enabled => $monitor_enabled,
        monitor_username => $monitor_username,
        monitor_password => $_monitor_password,
        free_connections_pct => $free_connections_pct,
        max_allowed_packet => $max_allowed_packet,
        threads => $threads,
        connect_timeout_server_max => $connect_timeout_server_max,
        connect_retries_on_failure => $connect_retries_on_failure,
      },
    }
  } else {
      $settings = {
        datadir => $datadir,
        admin_variables => {
          admin_credentials => "${admin_username}:${_admin_password}",
          mysql_ifaces => "${admin_listen_ip}:${admin_listen_port};${admin_listen_socket}",
          web_enabled => $web_enabled,
          web_port => $web_port,
        },
        mysql_variables => {
          interfaces       => "${listen_ip}:${listen_port};${listen_socket}",
          monitor_writer_is_also_reader => $monitor_writer_is_also_reader,
          monitor_enabled => $monitor_enabled,
          monitor_username => $monitor_username,
          monitor_password => $_monitor_password,
        },
      }    
  }
  $config_settings = deep_merge($proxysql::params::config_settings, $settings, $override_config_settings)
  # lint:endignore



  anchor { '::proxysql::begin': }
  -> class { '::proxysql::config':}
  -> class { '::proxysql::install':}
  -> class { '::proxysql::service':}
  -> class { '::proxysql::admin_credentials':}
  -> class { '::proxysql::reload_config':}
  -> class { '::proxysql::cluster':}
  -> class { '::proxysql::configure':}
  -> anchor { '::proxysql::end': }

  Class['::proxysql::install']
  ~> Class['::proxysql::service']

}
